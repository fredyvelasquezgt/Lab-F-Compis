class ScannerClassAFD(object):
    def __init__(self):
        self.regex = ['(', '(', 32, '|', 9, '|', 10, ')', '+', ')', '#ws', '|', '(', '(', '(', 48, '|', 49, '|', 50, '|', 51, '|', 52, '|', 53, '|', 54, '|', 55, '|', 56, '|', 57, ')', '+', ')', '(', 46, '(', '(', 48, '|', 49, '|', 50, '|', 51, '|', 52, '|', 53, '|', 54, '|', 55, '|', 56, '|', 57, ')', '+', ')', ')', '?', '(', 69, '(', 43, '|', 45, ')', '?', '(', '(', 48, '|', 49, '|', 50, '|', 51, '|', 52, '|', 53, '|', 54, '|', 55, '|', 56, '|', 57, ')', '+', ')', ')', '?', ')', '#number', '|', 43, '#+', '|', 42, '#*', '|', 40, '#(', '|', 41, '#)']
        self.states = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
        self.transitions = [[0, 9, 1], [0, 10, 1], [0, 32, 1], [0, 40, 2], [0, 42, 3], [0, 43, 4], [0, 41, 5], [0, 48, 6], [0, 49, 6], [0, 50, 6], [0, 51, 6], [0, 52, 6], [0, 53, 6], [0, 54, 6], [0, 55, 6], [0, 56, 6], [0, 57, 6], [1, 9, 1], [1, 10, 1], [1, 32, 1], [6, 46, 7], [6, 48, 6], [6, 49, 6], [6, 50, 6], [6, 51, 6], [6, 52, 6], [6, 53, 6], [6, 54, 6], [6, 55, 6], [6, 56, 6], [6, 57, 6], [6, 69, 8], [7, 48, 9], [7, 49, 9], [7, 50, 9], [7, 51, 9], [7, 52, 9], [7, 53, 9], [7, 54, 9], [7, 55, 9], [7, 56, 9], [7, 57, 9], [8, 43, 10], [8, 45, 10], [8, 48, 11], [8, 49, 11], [8, 50, 11], [8, 51, 11], [8, 52, 11], [8, 53, 11], [8, 54, 11], [8, 55, 11], [8, 56, 11], [8, 57, 11], [9, 48, 9], [9, 49, 9], [9, 50, 9], [9, 51, 9], [9, 52, 9], [9, 53, 9], [9, 54, 9], [9, 55, 9], [9, 56, 9], [9, 57, 9], [9, 69, 8], [10, 48, 11], [10, 49, 11], [10, 50, 11], [10, 51, 11], [10, 52, 11], [10, 53, 11], [10, 54, 11], [10, 55, 11], [10, 56, 11], [10, 57, 11], [11, 48, 11], [11, 49, 11], [11, 50, 11], [11, 51, 11], [11, 52, 11], [11, 53, 11], [11, 54, 11], [11, 55, 11], [11, 56, 11], [11, 57, 11]]
        self.initial_state = '0'
        self.final_states = {1: '#ws', 2: '#(', 3: '#*', 4: '#+', 5: '#)', 6: '#number', 9: '#number', 11: '#number'}
        self.alphabet = [9, 10, '#+', '#)', 32, 40, '#*', 42, 43, '#ws', 45, 46, 41, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 69, '#number', '#(']

def tokens(token):
	if(token == '#ws'):
		return WHITESPACE
	if(token == '#number'):
		return NUMBER
	if(token == '#+'):
		return PLUS
	if(token == '#*'):
		return TIMES
	if(token == '#('):
		return LPAREN
	if(token == '#)'):
		return RPAREN

	return ERROR

