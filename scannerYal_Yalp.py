class ScannerClassAFD(object):
	def __init__(self):
		self.regex = ['(', '(', 32, '|', 9, '|', 10, ')', '+', ')', '#ws', '|', '(', 42, ')', '#characters', '|', 47, 42, '#/*', '|', 42, 47, '#*/', '|', 37, 116, 111, 107, 101, 110, '#%token', '|', 124, '#|', '|', 73, 71, 78, 79, 82, 69, '#IGNORE', '|', '(', '(', 97, '|', 98, '|', 99, '|', 100, '|', 101, '|', 102, '|', 103, '|', 104, '|', 105, '|', 106, '|', 107, '|', 108, '|', 109, '|', 110, '|', 111, '|', 112, '|', 113, '|', 114, '|', 115, '|', 116, '|', 117, '|', 118, '|', 119, '|', 120, '|', 121, '|', 122, ')', '*', ')', '#minusword', '|', '(', '(', 65, '|', 66, '|', 67, '|', 68, '|', 69, '|', 70, '|', 71, '|', 72, '|', 73, '|', 74, '|', 75, '|', 76, '|', 77, '|', 78, '|', 79, '|', 80, '|', 81, '|', 82, '|', 83, '|', 84, '|', 85, '|', 86, '|', 87, '|', 88, '|', 89, '|', 90, ')', '*', ')', '#mayusword', '|', 37, 37, '#%%', '|', 58, '#:', '|', 59, '#;']
		self.states = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23]
		self.transitions = [[0, 9, 1], [0, 10, 1], [0, 32, 1], [0, 37, 2], [0, 42, 3], [0, 47, 4], [0, 58, 5], [0, 59, 6], [0, 65, 7], [0, 66, 7], [0, 67, 7], [0, 68, 7], [0, 69, 7], [0, 70, 7], [0, 71, 7], [0, 72, 7], [0, 73, 8], [0, 74, 7], [0, 75, 7], [0, 76, 7], [0, 78, 7], [0, 79, 7], [0, 77, 7], [0, 80, 7], [0, 82, 7], [0, 81, 7], [0, 83, 7], [0, 84, 7], [0, 85, 7], [0, 119, 9], [0, 86, 7], [0, 87, 7], [0, 88, 7], [0, 89, 7], [0, 90, 7], [0, 97, 9], [0, 98, 9], [0, 99, 9], [0, 100, 9], [0, 101, 9], [0, 102, 9], [0, 103, 9], [0, 104, 9], [0, 105, 9], [0, 106, 9], [0, 107, 9], [0, 108, 9], [0, 110, 9], [0, 111, 9], [0, 109, 9], [0, 112, 9], [0, 113, 9], [0, 114, 9], [0, 116, 9], [0, 115, 9], [0, 117, 9], [0, 118, 9], [0, 120, 9], [0, 121, 9], [0, 122, 9], [0, 124, 10], [1, 9, 1], [1, 10, 1], [1, 32, 1], [2, 37, 11], [2, 116, 12], [3, 47, 13], [4, 42, 14], [7, 65, 7], [7, 66, 7], [7, 67, 7], [7, 68, 7], [7, 69, 7], [7, 70, 7], [7, 71, 7], [7, 72, 7], [7, 73, 7], [7, 74, 7], [7, 75, 7], [7, 76, 7], [7, 78, 7], [7, 79, 7], [7, 77, 7], [7, 80, 7], [7, 82, 7], [7, 81, 7], [7, 83, 7], [7, 84, 7], [7, 85, 7], [7, 86, 7], [7, 87, 7], [7, 88, 7], [7, 89, 7], [7, 90, 7], [8, 65, 7], [8, 66, 7], [8, 67, 7], [8, 68, 7], [8, 69, 7], [8, 70, 7], [8, 71, 15], [8, 72, 7], [8, 73, 7], [8, 74, 7], [8, 75, 7], [8, 76, 7], [8, 78, 7], [8, 79, 7], [8, 77, 7], [8, 80, 7], [8, 82, 7], [8, 81, 7], [8, 83, 7], [8, 84, 7], [8, 85, 7], [8, 86, 7], [8, 87, 7], [8, 88, 7], [8, 89, 7], [8, 90, 7], [9, 119, 9], [9, 97, 9], [9, 98, 9], [9, 99, 9], [9, 100, 9], [9, 101, 9], [9, 102, 9], [9, 103, 9], [9, 104, 9], [9, 105, 9], [9, 106, 9], [9, 107, 9], [9, 108, 9], [9, 110, 9], [9, 111, 9], [9, 109, 9], [9, 112, 9], [9, 113, 9], [9, 114, 9], [9, 116, 9], [9, 115, 9], [9, 117, 9], [9, 118, 9], [9, 120, 9], [9, 121, 9], [9, 122, 9], [12, 111, 16], [15, 65, 7], [15, 66, 7], [15, 67, 7], [15, 68, 7], [15, 69, 7], [15, 70, 7], [15, 71, 7], [15, 72, 7], [15, 73, 7], [15, 74, 7], [15, 75, 7], [15, 76, 7], [15, 78, 17], [15, 79, 7], [15, 77, 7], [15, 80, 7], [15, 82, 7], [15, 81, 7], [15, 83, 7], [15, 84, 7], [15, 85, 7], [15, 86, 7], [15, 87, 7], [15, 88, 7], [15, 89, 7], [15, 90, 7], [16, 107, 18], [17, 65, 7], [17, 66, 7], [17, 67, 7], [17, 68, 7], [17, 69, 7], [17, 70, 7], [17, 71, 7], [17, 72, 7], [17, 73, 7], [17, 74, 7], [17, 75, 7], [17, 76, 7], [17, 78, 7], [17, 79, 19], [17, 77, 7], [17, 80, 7], [17, 82, 7], [17, 81, 7], [17, 83, 7], [17, 84, 7], [17, 85, 7], [17, 86, 7], [17, 87, 7], [17, 88, 7], [17, 89, 7], [17, 90, 7], [18, 101, 20], [19, 65, 7], [19, 66, 7], [19, 67, 7], [19, 68, 7], [19, 69, 7], [19, 70, 7], [19, 71, 7], [19, 72, 7], [19, 73, 7], [19, 74, 7], [19, 75, 7], [19, 76, 7], [19, 78, 7], [19, 79, 7], [19, 77, 7], [19, 80, 7], [19, 82, 21], [19, 81, 7], [19, 83, 7], [19, 84, 7], [19, 85, 7], [19, 86, 7], [19, 87, 7], [19, 88, 7], [19, 89, 7], [19, 90, 7], [20, 110, 22], [21, 65, 7], [21, 66, 7], [21, 67, 7], [21, 68, 7], [21, 69, 23], [21, 70, 7], [21, 71, 7], [21, 72, 7], [21, 73, 7], [21, 74, 7], [21, 75, 7], [21, 76, 7], [21, 78, 7], [21, 79, 7], [21, 77, 7], [21, 80, 7], [21, 82, 7], [21, 81, 7], [21, 83, 7], [21, 84, 7], [21, 85, 7], [21, 86, 7], [21, 87, 7], [21, 88, 7], [21, 89, 7], [21, 90, 7], [23, 65, 7], [23, 66, 7], [23, 67, 7], [23, 68, 7], [23, 69, 7], [23, 70, 7], [23, 71, 7], [23, 72, 7], [23, 73, 7], [23, 74, 7], [23, 75, 7], [23, 76, 7], [23, 78, 7], [23, 79, 7], [23, 77, 7], [23, 80, 7], [23, 82, 7], [23, 81, 7], [23, 83, 7], [23, 84, 7], [23, 85, 7], [23, 86, 7], [23, 87, 7], [23, 88, 7], [23, 89, 7], [23, 90, 7]]
		self.initial_state = '0'
		self.final_state = {0: '#mayusword', 1: '#ws', 3: '#characters', 5: '#:', 6: '#;', 7: '#mayusword', 8: '#mayusword', 9: '#minusword', 10: '#|', 11: '#%%', 13: '#*/', 14: '#/*', 15: '#mayusword', 17: '#mayusword', 19: '#mayusword', 21: '#mayusword', 22: '#%token', 23: '#mayusword'}
		self.alphabet = [9, 10, '#IGNORE', '#characters', '#;', 32, 37, 42, '#ws', '#:', 47, 58, '#minusword', 59, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, '#*/', 78, 79, 77, 80, 82, 81, 83, 84, 85, 119, '#|', 86, 87, 88, 89, '#%token', 90, '#mayusword', '#%%', 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, '#/*', 108, 110, 111, 109, 112, 113, 114, 116, 115, 117, 118, 120, 121, 122, 124]

	def tokens(token):
		if(token == '#ws'):
			return WHITESPACE
		if(token == '#characters'):
			return CHARACTERS
		if(token == '#/*'):
			return LEFTCOMMENT
		if(token == '#*/'):
			return RIGHTCOMMENT
		if(token == '#%token'):
			return TOKEN
		if(token == '#|'):
			return OR
		if(token == '#IGNORE'):
			return IGNORE
		if(token == '#minusword'):
			return WORDMIN
		if(token == '#mayusword'):
			return WORDMAY
		if(token == '#%%'):
			return SPLIT
		if(token == '#:'):
			return TWOPOINTS
		if(token == '#;'):
			return FINISHDECLARATION

		return ERROR

